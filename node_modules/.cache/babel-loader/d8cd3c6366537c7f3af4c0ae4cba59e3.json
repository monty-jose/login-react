{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\Walle\\\\walle-fe-web\\\\trunk\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\Walle\\\\walle-fe-web\\\\trunk\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\Walle\\\\walle-fe-web\\\\trunk\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\Walle\\\\walle-fe-web\\\\trunk\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\Walle\\\\walle-fe-web\\\\trunk\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Walle\\\\walle-fe-web\\\\trunk\\\\src\\\\components\\\\private\\\\users\\\\UsersFormCreate.js\";\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport UsersService from './services/UsersService';\n\nvar UsersFormCreate = /*#__PURE__*/function (_React$Component) {\n  _inherits(UsersFormCreate, _React$Component);\n\n  function UsersFormCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UsersFormCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UsersFormCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleSubmitWithFormData = function (event) {\n      event.preventDefault();\n\n      if (!event.target.checkValidity()) {\n        // form is invalid! so we do nothing\n        console.warn('Invalid!');\n        toast.error('Please, fill all the required fields!');\n        return;\n      }\n\n      var data = new FormData(event.target);\n      UsersService.createUser(data).then(function (response) {\n        var user = response.data;\n        var name = user.name,\n            email = user.email;\n        toast.success(\"User created: \".concat(name, \" (\").concat(email, \")\")); // Execute the callback passed by the parent\n\n        _this.props.onCreateUser(user);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UsersFormCreate, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"b-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }, \"Crear Ususuario\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmitWithFormData,\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }\n      }, \"Nombre* :\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"name\",\n        name: \"name\",\n        className: \"form-control\",\n        type: \"text\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, \"Email* :\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"email\",\n        name: \"email\",\n        className: \"form-control\",\n        type: \"email\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }, \"Username* :\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"username\",\n        name: \"username\",\n        className: \"form-control\",\n        type: \"text\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }\n      }, \"Password* :\"), /*#__PURE__*/React.createElement(\"input\", {\n        id: \"password\",\n        name: \"password\",\n        className: \"form-control\",\n        type: \"password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"Submit\")));\n    }\n  }]);\n\n  return UsersFormCreate;\n}(React.Component);\n\nexport default UsersFormCreate;","map":{"version":3,"sources":["C:/xampp/htdocs/Walle/walle-fe-web/trunk/src/components/private/users/UsersFormCreate.js"],"names":["React","toast","UsersService","UsersFormCreate","handleSubmitWithFormData","event","preventDefault","target","checkValidity","console","warn","error","data","FormData","createUser","then","response","user","name","email","success","props","onCreateUser","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {toast} from 'react-toastify';\nimport UsersService from './services/UsersService';\n\nclass UsersFormCreate extends React.Component {\n\n  handleSubmitWithFormData = (event) => {\n    event.preventDefault();\n\n    if (!event.target.checkValidity()) {\n      // form is invalid! so we do nothing\n      console.warn('Invalid!');\n      toast.error('Please, fill all the required fields!');\n      return;\n    }\n\n    const data = new FormData(event.target);\n\n    UsersService.createUser(data).then((response) => {\n      const user = response.data;\n      const {name, email} = user;\n      toast.success(`User created: ${name} (${email})`);\n\n      // Execute the callback passed by the parent\n      this.props.onCreateUser(user);\n    });\n\n  };\n\n  render() {\n\n    return (\n\n        <div className=\"b-form\">\n\n          <h1>Crear Ususuario</h1>\n          <form onSubmit={this.handleSubmitWithFormData} noValidate>\n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Nombre* :</label>\n              <input id=\"name\" name=\"name\" className=\"form-control\"\n                     type=\"text\" required/>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Email* :</label>\n              <input id=\"email\" name=\"email\" className=\"form-control\"\n                     type=\"email\" required/>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username* :</label>\n              <input id=\"username\" name=\"username\" className=\"form-control\"\n                     type=\"text\" required/>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password* :</label>\n              <input id=\"password\" name=\"password\" className=\"form-control\"\n                     type=\"password\" required/>\n            </div>\n            <button type=\"submit\" className=\"btn btn-primary\">Submit\n            </button>\n          </form>\n        </div>\n    );\n  }\n}\n\nexport default UsersFormCreate;\n"]},"metadata":{},"sourceType":"module"}