{"ast":null,"code":"import _classCallCheck from \"D:\\\\Grupo Slost\\\\Walle\\\\walle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Grupo Slost\\\\Walle\\\\walle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Grupo Slost\\\\Walle\\\\walle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Grupo Slost\\\\Walle\\\\walle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Grupo Slost\\\\Walle\\\\walle-front\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Grupo Slost\\\\Walle\\\\walle-front\\\\src\\\\components\\\\public\\\\login\\\\LoginForm.js\";\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport AuthenticationService from '../../../auth/services/AuthenticationService';\nimport { Redirect } from 'react-router-dom';\nimport { Button, FormGroup, FormControl, Label } from \"react-bootstrap\";\n\nvar LoginForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      redirectToReferrer: false\n    };\n\n    _this.handleLoginAction = function (event) {\n      event.preventDefault(); //Si los campos del formulario estan vacioes\n\n      if (!event.target.checkValidity()) {\n        toast.error('Please, fill all the required fields!');\n        return;\n      }\n\n      var data = new FormData(event.target);\n      var userName = data.get('username');\n      var password = data.get('password'); //Generamos el session storege\n\n      AuthenticationService.login(userName, password).then(function () {\n        _this.setState(function () {\n          return {\n            redirectToReferrer: true\n          };\n        });\n      }).catch(function (error) {\n        console.error(error);\n        toast.error(\"Couldn't start a session!\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _from = {\n        from: {\n          pathname: '/users'\n        }\n      },\n          from = _from.from;\n      var redirectToReferrer = this.state.redirectToReferrer; //si se inicio sesion hacemos un redirect al content\n\n      if (redirectToReferrer) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: from,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return (\n        /*#__PURE__*/\n        // <div className=\"col-12 col-sm-12 col-md-6 offset-md-3\">\n        //   <div className=\"b-form\">\n        //     <h1>Login</h1>\n        //     <form onSubmit={this.handleLoginAction} noValidate>\n        //       <div className=\"form-group\">\n        //         <label htmlFor=\"username\">Uusuario :</label>\n        //         <input id=\"username\" name=\"username\" className=\"form-control\"\n        //                type=\"text\" required\n        //                defaultValue={'usuario'}/>\n        //       </div>\n        //       <div className=\"form-group\">\n        //         <label htmlFor=\"password\">Contraseña :</label>\n        //         <input id=\"password\" name=\"password\" className=\"form-control\"\n        //                type=\"password\" required defaultValue={'contraseña'}/>\n        //       </div>\n        //       <button type=\"submit\" className=\"btn btn-primary\">Ingresar\n        //       </button>\n        //     </form>\n        //   </div>\n        // </div>\n        React.createElement(\"div\", {\n          className: \"Login\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: this.handleLoginAction,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(FormGroup, {\n          controlId: \"email\",\n          bsSize: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }\n        }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n          autoFocus: true,\n          type: \"email\",\n          value: email,\n          onChange: function onChange(e) {\n            return setEmail(e.target.value);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }\n        })), /*#__PURE__*/React.createElement(FormGroup, {\n          controlId: \"password\",\n          bsSize: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Label, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }\n        }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n          value: password,\n          onChange: function onChange(e) {\n            return setPassword(e.target.value);\n          },\n          type: \"password\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }\n        })), /*#__PURE__*/React.createElement(Button, {\n          block: true,\n          bsSize: \"large\",\n          disabled: !validateForm(),\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 11\n          }\n        }, \"Login\")))\n      );\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["D:/Grupo Slost/Walle/walle-front/src/components/public/login/LoginForm.js"],"names":["React","toast","AuthenticationService","Redirect","Button","FormGroup","FormControl","Label","LoginForm","state","redirectToReferrer","handleLoginAction","event","preventDefault","target","checkValidity","error","data","FormData","userName","get","password","login","then","setState","catch","console","from","pathname","email","e","setEmail","value","setPassword","validateForm","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {toast} from 'react-toastify';\nimport AuthenticationService\n  from '../../../auth/services/AuthenticationService';\nimport {Redirect} from 'react-router-dom';\nimport { Button, FormGroup, FormControl, Label } from \"react-bootstrap\";\n\nclass LoginForm extends React.Component {\n\n  state = {\n    redirectToReferrer: false,\n  };\n\n  //Evento que se dispara cuando ejecutamos el Submit del login\n  handleLoginAction = (event) => {\n    event.preventDefault();\n\n    //Si los campos del formulario estan vacioes\n    if (!event.target.checkValidity()) {\n      toast.error('Please, fill all the required fields!');\n      return;\n    }\n\n    const data = new FormData(event.target);\n    const userName = data.get('username');\n    const password = data.get('password');\n\n    //Generamos el session storege\n    AuthenticationService.login(userName, password).then(() => {     \n\n      this.setState(() => ({\n        redirectToReferrer: true,\n      }));\n\n    }).catch(error => {\n      console.error(error);\n      toast.error(`Couldn't start a session!`);\n    });\n  };\n\n  render() {\n\n    const {from} = {from: {pathname: '/users'}};\n    const {redirectToReferrer} = this.state;\n    //si se inicio sesion hacemos un redirect al content\n    if (redirectToReferrer) {\n      return <Redirect to={from}/>;\n    }\n\n    return (\n        // <div className=\"col-12 col-sm-12 col-md-6 offset-md-3\">\n        //   <div className=\"b-form\">\n        //     <h1>Login</h1>\n        //     <form onSubmit={this.handleLoginAction} noValidate>\n\n        //       <div className=\"form-group\">\n        //         <label htmlFor=\"username\">Uusuario :</label>\n        //         <input id=\"username\" name=\"username\" className=\"form-control\"\n        //                type=\"text\" required\n        //                defaultValue={'usuario'}/>\n        //       </div>\n\n        //       <div className=\"form-group\">\n        //         <label htmlFor=\"password\">Contraseña :</label>\n        //         <input id=\"password\" name=\"password\" className=\"form-control\"\n        //                type=\"password\" required defaultValue={'contraseña'}/>\n        //       </div>\n\n        //       <button type=\"submit\" className=\"btn btn-primary\">Ingresar\n        //       </button>\n        //     </form>\n        //   </div>\n        // </div>\n        <div className=\"Login\">\n        <form onSubmit={this.handleLoginAction} >\n          <FormGroup controlId=\"email\" bsSize=\"large\">\n            <Label>Email</Label>\n            <FormControl\n              autoFocus\n              type=\"email\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"password\" bsSize=\"large\">\n            <Label>Password</Label>\n            <FormControl\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              type=\"password\"\n            />\n          </FormGroup>\n          <Button block bsSize=\"large\" disabled={!validateForm()} type=\"submit\">\n            Login\n          </Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}