{"ast":null,"code":"import _classCallCheck from \"C:\\\\xampp\\\\htdocs\\\\Walle\\\\walle-fe-web\\\\trunk\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\xampp\\\\htdocs\\\\Walle\\\\walle-fe-web\\\\trunk\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\xampp\\\\htdocs\\\\Walle\\\\walle-fe-web\\\\trunk\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\xampp\\\\htdocs\\\\Walle\\\\walle-fe-web\\\\trunk\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\xampp\\\\htdocs\\\\Walle\\\\walle-fe-web\\\\trunk\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\Walle\\\\walle-fe-web\\\\trunk\\\\src\\\\components\\\\public\\\\login\\\\LoginForm.js\";\nimport React from 'react';\nimport toast from 'react-toastify';\nimport AuthenticationService from '../../../auth/services/AuthenticationService';\nimport { Redirect } from 'react-router-dom';\nimport { Button, FormGroup, FormControl, Row, Col, Form } from \"react-bootstrap\";\nimport './style/login.css';\nimport Logo from '../../../assets/menu/logo.ico';\nimport 'react-toastify/dist/ReactToastify.css';\n\nvar LoginForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      redirectToReferrer: false\n    };\n\n    _this.handleLoginAction = function (event) {\n      event.preventDefault(); //Si los campos del formulario estan vacioes\n\n      if (!event.target.checkValidity()) {\n        toast.error('Please, fill all the required fields!');\n        return;\n      }\n\n      var data = new FormData(event.target);\n      var userName = data.get('username');\n      var password = data.get('password'); //Generamos el session storege\n\n      AuthenticationService.login(userName, password).then(function () {\n        _this.setState(function () {\n          return {\n            redirectToReferrer: true\n          };\n        });\n      }).catch(function (error) {\n        //   console.error(error);\n        toast.error(\"Couldn't start a session!\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _from = {\n        from: {\n          pathname: '/users'\n        }\n      },\n          from = _from.from;\n      var redirectToReferrer = this.state.redirectToReferrer; //si se inicio sesion hacemos un redirect al content\n\n      if (redirectToReferrer) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: from,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"login-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        onSubmit: this.handleLoginAction,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, \"Wall\", /*#__PURE__*/React.createElement(\"img\", {\n        src: Logo,\n        className: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }), \" \"), /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \"Sistema de Stock\"), /*#__PURE__*/React.createElement(FormGroup, {\n        controlId: \"formBasicEmail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        placeholder: \"Tu Usuario *\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        controlId: \"formBasicPassword\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormControl, {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        placeholder: \"Tu Password *\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(FormGroup, {\n        controlId: \"formBasicSubmit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        className: \"mt-9\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: {\n          span: 12,\n          offset: 3\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btnSubmit\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, \"Ingresar\"))))));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/xampp/htdocs/Walle/walle-fe-web/trunk/src/components/public/login/LoginForm.js"],"names":["React","toast","AuthenticationService","Redirect","Button","FormGroup","FormControl","Row","Col","Form","Logo","LoginForm","state","redirectToReferrer","handleLoginAction","event","preventDefault","target","checkValidity","error","data","FormData","userName","get","password","login","then","setState","catch","from","pathname","span","offset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport toast from 'react-toastify';\nimport AuthenticationService\n  from '../../../auth/services/AuthenticationService';\nimport {Redirect} from 'react-router-dom';\nimport { Button, FormGroup, FormControl, Row, Col, Form } from \"react-bootstrap\";\nimport './style/login.css'\nimport Logo from '../../../assets/menu/logo.ico';\nimport 'react-toastify/dist/ReactToastify.css'\n\n\nclass LoginForm extends React.Component {\n\n  state = {\n    redirectToReferrer: false,\n  };\n\n  //Evento que se dispara cuando ejecutamos el Submit del login\n  handleLoginAction = (event) => {\n    event.preventDefault();\n\n    //Si los campos del formulario estan vacioes\n    if (!event.target.checkValidity()) {\n      toast.error('Please, fill all the required fields!');\n      return;\n    }\n\n    const data = new FormData(event.target);\n    const userName = data.get('username');\n    const password = data.get('password');\n\n    //Generamos el session storege\n    AuthenticationService.login(userName, password).then(() => {     \n\n      this.setState(() => ({\n        redirectToReferrer: true,\n      }));\n\n    }).catch(error => {\n    //   console.error(error);\n      toast.error(`Couldn't start a session!`);\n    });\n  };\n\n  render() {\n\n    const {from} = {from: {pathname: '/users'}};\n    const {redirectToReferrer} = this.state;\n    //si se inicio sesion hacemos un redirect al content\n    if (redirectToReferrer) {\n      return <Redirect to={from}/>;\n    }\n\n    return (\n        <div className=\"login-form\">\n        <Form onSubmit={this.handleLoginAction}  > \n          <h2>Wall<img src={Logo} className='logo'>\n          </img><br/> </h2>\n          <h4>Sistema de Stock</h4>\n          <FormGroup controlId=\"formBasicEmail\">\n            <FormControl type=\"text\" id=\"username\" name=\"username\" placeholder=\"Tu Usuario *\" required/>\n          </FormGroup>      \n          <FormGroup controlId=\"formBasicPassword\">\n            <FormControl type=\"password\" id=\"password\" name=\"password\" placeholder=\"Tu Password *\" required />\n          </FormGroup>\n          <FormGroup controlId=\"formBasicSubmit\"> \n            <Row className=\"mt-9\">\n            <Col md={{ span: 12, offset: 3 }}>\n            <Button  className=\"btnSubmit\" type=\"submit\">\n              Ingresar\n              </Button>\n            </Col>\n          </Row>       \n          </FormGroup>\n      </Form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}